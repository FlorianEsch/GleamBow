@use '@angular/material' as mat;



@include mat.core();

body {
  /* Existing styles */
  background-color: var(--surfaceContainer);
  color: var(--onSurface);
  position: relative; /* Needed for pseudo-element positioning */
  height: 100%; /* Full viewport height */
  overflow: hidden; /* Prevents scrolling if overlay is larger than the viewport */
  }

body::before {
  content: '';
  position: fixed;
  top: -40;
  left: 50%;
  width: 80%;
  height: var(--before-element-height, 100%);
  clip-path: polygon(50% 0%, 100% 100%, 0% 100%);
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.3) -10px, rgba(0, 0, 0, 0) 70%);
  transform: scaleY(2.1) translateX(-50%) rotateX(45deg);
  transform-origin: 50% 0%;
  transition: height 0.5s ease;
}

button {
  background-color: var(--primary);
  color: var(--onSurface);
}
button:hover {
  background-color: var(--secondaryContainer);
  color: var(--onSecondary);
}

$dark-foreground: (
  base: white,
  divider: rgba(white, 0.12),
  dividers: rgba(white, 0.12),
  disabled: rgba(white, 0.38),
  disabled-button: rgba(white, 0.38),
  disabled-text: rgba(white, 0.38),
  hint-text: rgba(white, 0.38),
  secondary-text: rgba(white, 0.54),
  icon: white,
  icons: white,
  text: white
);

$light-foreground: (
  base: black,
  divider: rgba(black, 0.12),
  dividers: rgba(black, 0.12),
  disabled: rgba(black, 0.38),
  disabled-button: rgba(black, 0.38),
  disabled-text: rgba(black, 0.38),
  hint-text: rgba(black, 0.38),
  secondary-text: rgba(black, 0.54),
  icon: black,
  icons: black,
  text: black
);